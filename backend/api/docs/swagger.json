{
    "swagger": "2.0",
    "info": {
        "description": "This is Cognix Golang API Documentation",
        "title": "Cognix API",
        "contact": {
            "name": "API Support"
        },
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/auth/google/invite": {
            "get": {
                "description": "join user to tenant using invitation link",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "join user to tenant using invitation link",
                "operationId": "auth_join_to_team",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "create invitation for user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "create invitation for user",
                "operationId": "auth_invitation",
                "parameters": [
                    {
                        "description": "invitation  parameter",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/parameters.InviteParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/google/login": {
            "get": {
                "description": "login using google auth",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "login using google auth",
                "operationId": "auth_login",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/google/signup": {
            "get": {
                "description": "register new user and tenant using google auth",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "register new user and tenant using google auth",
                "operationId": "auth_signup",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/chats/create-chat-session": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "send message and wait stream response",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "send message and wait stream response",
                "operationId": "chat_send_message",
                "parameters": [
                    {
                        "description": "send message parameters",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/parameters.CreateChatMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ChatMessage"
                        }
                    }
                }
            }
        },
        "/chats/get-chat-session/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "return chat session with messages by given id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "return chat session with messages by given id",
                "operationId": "chat_get_by_id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "session id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ChatSession"
                        }
                    }
                }
            }
        },
        "/chats/get-user-chat-sessions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "return list of chat sessions for current user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "return list of chat sessions for current user",
                "operationId": "chat_get_sessions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.ChatSession"
                            }
                        }
                    }
                }
            }
        },
        "/chats/message/feedback": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "add  feedback to message",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "add  feedback to message",
                "operationId": "chat_message_feedback",
                "parameters": [
                    {
                        "description": "send message parameters",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/parameters.MessageFeedbackParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ChatMessageFeedback"
                        }
                    }
                }
            }
        },
        "/manage/connector": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "return list of allowed connectors",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Connectors"
                ],
                "summary": "return list of allowed connectors",
                "operationId": "connectors_get_all",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Connector"
                            }
                        }
                    }
                }
            }
        },
        "/manage/connector/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "creates connector",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Connectors"
                ],
                "summary": "creates connector",
                "operationId": "connectors_create",
                "parameters": [
                    {
                        "description": "connector create parameter",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/parameters.CreateConnectorParam"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Connector"
                        }
                    }
                }
            }
        },
        "/manage/connector/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "return list of allowed connectors",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Connectors"
                ],
                "summary": "return list of allowed connectors",
                "operationId": "connectors_get_by_id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "connector id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Connector"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "updates connector",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Connectors"
                ],
                "summary": "updates connector",
                "operationId": "connectors_update",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "connector id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "connector update parameter",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/parameters.UpdateConnectorParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Connector"
                        }
                    }
                }
            }
        },
        "/manage/credential": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "return list of allowed credentials",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Credentials"
                ],
                "summary": "return list of allowed credentials",
                "operationId": "credentials_get_all",
                "parameters": [
                    {
                        "type": "string",
                        "description": "source of credentials",
                        "name": "source",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "true for include deleted credentials",
                        "name": "archived",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Credential"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "creates new credential",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Credentials"
                ],
                "summary": "creates new credential",
                "operationId": "credentials_create",
                "parameters": [
                    {
                        "description": "credential create parameter",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/parameters.CreateCredentialParam"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Credential"
                        }
                    }
                }
            }
        },
        "/manage/credential/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "return list of allowed credentials",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Credentials"
                ],
                "summary": "return list of allowed credentials",
                "operationId": "credentials_get_by_id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "credential id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Credential"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "updates credential",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Credentials"
                ],
                "summary": "updates credential",
                "operationId": "credentials_update",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "credential id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "credential update parameter",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/parameters.UpdateCredentialParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Credential"
                        }
                    }
                }
            }
        },
        "/manage/document_sets": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "return list of document sets for current user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Document Set"
                ],
                "summary": "return list of document sets for current user",
                "operationId": "document_set_get_by_user",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "true for include deleted document sets",
                        "name": "archived",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.DocumentSet"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "creates document sets",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Document Set"
                ],
                "summary": "creates document sets",
                "operationId": "document_set_create",
                "parameters": [
                    {
                        "description": "document set parameter",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/parameters.DocumentSetParam"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.DocumentSet"
                        }
                    }
                }
            }
        },
        "/manage/document_sets/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "return document set with connector list by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Document Set"
                ],
                "summary": "return document set with connector list by id",
                "operationId": "document_set_get_by_id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "document set id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.DocumentSet"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "updates document sets",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Document Set"
                ],
                "summary": "updates document sets",
                "operationId": "document_set_update",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "document set id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "document set parameter",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/parameters.DocumentSetParam"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.DocumentSet"
                        }
                    }
                }
            }
        },
        "/manage/document_sets/{id}/{action}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "delete or restore document sets",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Document Set"
                ],
                "summary": "delete or restore document sets",
                "operationId": "document_set_delete",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "document set id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "action : delete | restore ",
                        "name": "action",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.DocumentSet"
                        }
                    }
                }
            }
        },
        "/manage/embedding_models": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "return list of embedding models",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EmbeddingModel"
                ],
                "summary": "return list of embedding models",
                "operationId": "embedding_model_get_all",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "true for include deleted embedding models",
                        "name": "archived",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.EmbeddingModel"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "creates embedding models",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EmbeddingModel"
                ],
                "summary": "creates embedding models",
                "operationId": "embedding_model_create",
                "parameters": [
                    {
                        "description": "embedding model parameter",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/parameters.EmbeddingModelParam"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.EmbeddingModel"
                        }
                    }
                }
            }
        },
        "/manage/embedding_models/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "return embedding model by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EmbeddingModel"
                ],
                "summary": "return embedding model by id",
                "operationId": "embedding_model_get_by_id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "embedding model id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.EmbeddingModel"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "updates embedding model",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EmbeddingModel"
                ],
                "summary": "updates embedding model",
                "operationId": "embedding_model_update",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "embedding model id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "embedding model parameter",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/parameters.EmbeddingModelParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.EmbeddingModel"
                        }
                    }
                }
            }
        },
        "/manage/embedding_models/{id}/{action}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "delete or restore embedding model",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EmbeddingModel"
                ],
                "summary": "delete or restore embedding model",
                "operationId": "embedding_model_delete",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "embedding model id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "action : delete | restore ",
                        "name": "action",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.EmbeddingModel"
                        }
                    }
                }
            }
        },
        "/manage/personas": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "return list of allowed personas",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Persona"
                ],
                "summary": "return list of allowed personas",
                "operationId": "personas_get_all",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Persona"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "create persona",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Persona"
                ],
                "summary": "create persona",
                "operationId": "persona_create",
                "parameters": [
                    {
                        "description": "persona payload",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/parameters.PersonaParam"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Persona"
                        }
                    }
                }
            }
        },
        "/manage/personas/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "return persona by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Persona"
                ],
                "summary": "return persona by id",
                "operationId": "persona_get_by_id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "persona id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Persona"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "update persona",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Persona"
                ],
                "summary": "update persona",
                "operationId": "persona_update",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "persona id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "persona payload",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/parameters.PersonaParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Persona"
                        }
                    }
                }
            }
        },
        "/tenant/users": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "return list of users",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tenant"
                ],
                "summary": "return list of users",
                "operationId": "tenant_get_users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.User"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "add new user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tenant"
                ],
                "summary": "add new user",
                "operationId": "tenant_add_user",
                "parameters": [
                    {
                        "description": "create user parameter",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/parameters.AddUserParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                }
            }
        },
        "/tenant/users/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "edit  user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tenant"
                ],
                "summary": "edit user",
                "operationId": "tenant_edit_user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "edit user parameter",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/parameters.EditUserParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.ChatMessage": {
            "type": "object",
            "properties": {
                "chat_session_id": {
                    "type": "integer"
                },
                "citations": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "error": {
                    "type": "string"
                },
                "feedback": {
                    "$ref": "#/definitions/model.ChatMessageFeedback"
                },
                "id": {
                    "type": "integer"
                },
                "latest_child_message": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "message_type": {
                    "type": "string"
                },
                "parent_message": {
                    "type": "integer"
                },
                "rephrased_query": {
                    "type": "string"
                },
                "time_sent": {
                    "type": "string"
                },
                "token_count": {
                    "type": "integer"
                }
            }
        },
        "model.ChatMessageFeedback": {
            "type": "object",
            "properties": {
                "chat_message_id": {
                    "type": "integer"
                },
                "feedback": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "up_votes": {
                    "type": "boolean"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "model.ChatSession": {
            "type": "object",
            "properties": {
                "created_date": {
                    "type": "string"
                },
                "deleted_date": {
                    "$ref": "#/definitions/pg.NullTime"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ChatMessage"
                    }
                },
                "one_shot": {
                    "type": "boolean"
                },
                "persona": {
                    "$ref": "#/definitions/model.Persona"
                },
                "persona_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "model.Connector": {
            "type": "object",
            "properties": {
                "connector_specific_config": {
                    "$ref": "#/definitions/model.JSONMap"
                },
                "created_date": {
                    "type": "string"
                },
                "credential_id": {
                    "type": "integer"
                },
                "deleted_date": {
                    "$ref": "#/definitions/pg.NullTime"
                },
                "disabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "input_type": {
                    "type": "string"
                },
                "last_attempt_status": {
                    "type": "string"
                },
                "last_successful_index_time": {
                    "$ref": "#/definitions/pg.NullTime"
                },
                "name": {
                    "type": "string"
                },
                "refresh_freq": {
                    "type": "integer"
                },
                "shared": {
                    "type": "boolean"
                },
                "source": {
                    "$ref": "#/definitions/model.SourceType"
                },
                "tenant_id": {
                    "type": "string"
                },
                "total_docs_indexed": {
                    "type": "integer"
                },
                "updated_date": {
                    "$ref": "#/definitions/pg.NullTime"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "model.Credential": {
            "type": "object",
            "properties": {
                "created_date": {
                    "type": "string"
                },
                "credential_json": {
                    "$ref": "#/definitions/model.JSONMap"
                },
                "deleted_date": {
                    "$ref": "#/definitions/pg.NullTime"
                },
                "id": {
                    "type": "integer"
                },
                "shared": {
                    "type": "boolean"
                },
                "source": {
                    "$ref": "#/definitions/model.SourceType"
                },
                "tenant_id": {
                    "type": "string"
                },
                "updated_date": {
                    "$ref": "#/definitions/pg.NullTime"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "model.DocumentSet": {
            "type": "object",
            "properties": {
                "created_date": {
                    "type": "string"
                },
                "deleted_date": {
                    "$ref": "#/definitions/pg.NullTime"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_up_to_date": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "pairs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.DocumentSetConnectorPair"
                    }
                },
                "updated_date": {
                    "$ref": "#/definitions/pg.NullTime"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "model.DocumentSetConnectorPair": {
            "type": "object",
            "properties": {
                "connector_id": {
                    "type": "integer"
                },
                "document_set_id": {
                    "type": "integer"
                },
                "is_current": {
                    "type": "boolean"
                }
            }
        },
        "model.EmbeddingModel": {
            "type": "object",
            "properties": {
                "created_date": {
                    "type": "string"
                },
                "deleted_date": {
                    "$ref": "#/definitions/pg.NullTime"
                },
                "id": {
                    "type": "integer"
                },
                "index_name": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "model_dim": {
                    "type": "integer"
                },
                "model_id": {
                    "type": "string"
                },
                "model_name": {
                    "type": "string"
                },
                "normalize": {
                    "type": "boolean"
                },
                "passage_prefix": {
                    "type": "string"
                },
                "query_prefix": {
                    "type": "string"
                },
                "tenant_id": {
                    "type": "string"
                },
                "updated_date": {
                    "$ref": "#/definitions/pg.NullTime"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "model.JSONMap": {
            "type": "object",
            "additionalProperties": true
        },
        "model.LLM": {
            "type": "object",
            "properties": {
                "created_date": {
                    "type": "string"
                },
                "deleted_date": {
                    "$ref": "#/definitions/pg.NullTime"
                },
                "endpoint": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "model_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tenant_id": {
                    "type": "string"
                },
                "updated_date": {
                    "$ref": "#/definitions/pg.NullTime"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "model.Persona": {
            "type": "object",
            "properties": {
                "created_date": {
                    "type": "string"
                },
                "default_persona": {
                    "type": "boolean"
                },
                "deleted_date": {
                    "$ref": "#/definitions/pg.NullTime"
                },
                "description": {
                    "type": "string"
                },
                "display_priority": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "is_visible": {
                    "type": "boolean"
                },
                "llm": {
                    "$ref": "#/definitions/model.LLM"
                },
                "llm_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "prompt": {
                    "$ref": "#/definitions/model.Prompt"
                },
                "starter_messages": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "tenant_id": {
                    "type": "string"
                },
                "updated_date": {
                    "$ref": "#/definitions/pg.NullTime"
                }
            }
        },
        "model.Prompt": {
            "type": "object",
            "properties": {
                "created_date": {
                    "type": "string"
                },
                "datetime_aware": {
                    "type": "boolean"
                },
                "default_prompt": {
                    "type": "boolean"
                },
                "deleted_date": {
                    "$ref": "#/definitions/pg.NullTime"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "include_citations": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "persona_id": {
                    "type": "integer"
                },
                "system_prompt": {
                    "type": "string"
                },
                "task_prompt": {
                    "type": "string"
                },
                "updated_date": {
                    "$ref": "#/definitions/pg.NullTime"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "model.SourceType": {
            "type": "string",
            "enum": [
                "ingestion_api",
                "slack",
                "web",
                "google_drive",
                "gmail",
                "requesttracker",
                "github",
                "gitlab",
                "guru",
                "bookstack",
                "confluence",
                "slab",
                "jira",
                "productboard",
                "file",
                "notion",
                "zulip",
                "linear",
                "hubspot",
                "document360",
                "gong",
                "google_sites",
                "zendesk",
                "loopio",
                "sharepoint"
            ],
            "x-enum-varnames": [
                "SourceTypeIngestionApi",
                "SourceTypeSlack",
                "SourceTypeWEB",
                "SourceTypeGoogleDrive",
                "SourceTypeGMAIL",
                "SourceTypeRequesttracker",
                "SourceTypeGithub",
                "SourceTypeGitlab",
                "SourceTypeGuru",
                "SourceTypeBookstack",
                "SourceTypeConfluence",
                "SourceTypeSlab",
                "SourceTypeJira",
                "SourceTypeProductboard",
                "SourceTypeFile",
                "SourceTypeNotion",
                "SourceTypeZulip",
                "SourceTypeLinear",
                "SourceTypeHubspot",
                "SourceTypeDocument360",
                "SourceTypeGong",
                "SourceTypeGoogleSites",
                "SourceTypeZendesk",
                "SourceTypeLoopio",
                "SourceTypeSharepoint"
            ]
        },
        "model.Tenant": {
            "type": "object",
            "properties": {
                "configuration": {
                    "$ref": "#/definitions/model.JSONMap"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tenant": {
                    "$ref": "#/definitions/model.Tenant"
                },
                "tenant_id": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "parameters.AddUserParam": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "parameters.BaseFilters": {
            "type": "object",
            "properties": {
                "document_set": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "source_type": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SourceType"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "time_cutoff": {
                    "type": "string"
                }
            }
        },
        "parameters.CreateChatMessageRequest": {
            "type": "object",
            "properties": {
                "chat_session_id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "no_ai_answer": {
                    "type": "boolean"
                },
                "parent_message_id": {
                    "type": "integer"
                },
                "prompt_id": {
                    "type": "integer"
                },
                "query_override": {
                    "type": "string"
                },
                "retrieval_options": {
                    "$ref": "#/definitions/parameters.RetrievalDetails"
                },
                "search_doc_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "parameters.CreateChatSession": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "one_shot": {
                    "type": "boolean"
                },
                "persona_id": {
                    "type": "integer"
                }
            }
        },
        "parameters.CreateConnectorParam": {
            "type": "object",
            "properties": {
                "connector_specific_config": {
                    "$ref": "#/definitions/model.JSONMap"
                },
                "credential_id": {
                    "type": "integer"
                },
                "disabled": {
                    "type": "boolean"
                },
                "input_type": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "refresh_freq": {
                    "type": "integer"
                },
                "shared": {
                    "type": "boolean"
                },
                "source": {
                    "type": "string"
                }
            }
        },
        "parameters.CreateCredentialParam": {
            "type": "object",
            "properties": {
                "credential_json": {
                    "$ref": "#/definitions/model.JSONMap"
                },
                "shared": {
                    "type": "boolean"
                },
                "source": {
                    "type": "string"
                }
            }
        },
        "parameters.DocumentSetParam": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "parameters.EditUserParam": {
            "type": "object",
            "properties": {
                "role": {
                    "type": "string"
                }
            }
        },
        "parameters.EmbeddingModelParam": {
            "type": "object",
            "properties": {
                "index_name": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "model_dim": {
                    "type": "integer"
                },
                "model_id": {
                    "type": "string"
                },
                "model_name": {
                    "type": "string"
                },
                "normalize": {
                    "type": "boolean"
                },
                "passage_prefix": {
                    "type": "string"
                },
                "query_prefix": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "parameters.InviteParam": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "parameters.MessageFeedbackParam": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "vote": {
                    "type": "string"
                }
            }
        },
        "parameters.PersonaParam": {
            "type": "object",
            "properties": {
                "api_key": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "endpoint": {
                    "type": "string"
                },
                "model_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "starter_messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/parameters.StarterMessage"
                    }
                },
                "system_prompt": {
                    "type": "string"
                },
                "task_prompt": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "parameters.RetrievalDetails": {
            "type": "object",
            "properties": {
                "enable_auto_detect_filters": {
                    "type": "boolean"
                },
                "filters": {
                    "$ref": "#/definitions/parameters.BaseFilters"
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "real_time": {
                    "type": "boolean"
                },
                "run_search": {
                    "type": "string"
                }
            }
        },
        "parameters.StarterMessage": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "parameters.UpdateConnectorParam": {
            "type": "object",
            "properties": {
                "connector_specific_config": {
                    "$ref": "#/definitions/model.JSONMap"
                },
                "credential_id": {
                    "type": "integer"
                },
                "disabled": {
                    "type": "boolean"
                },
                "input_type": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "refresh_freq": {
                    "type": "integer"
                },
                "shared": {
                    "type": "boolean"
                }
            }
        },
        "parameters.UpdateCredentialParam": {
            "type": "object",
            "properties": {
                "credential_json": {
                    "$ref": "#/definitions/model.JSONMap"
                },
                "shared": {
                    "type": "boolean"
                }
            }
        },
        "pg.NullTime": {
            "type": "object",
            "properties": {
                "time.Time": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}