

# build a container
sudo docker build . -t cognix/embedder:latest
sudo docker build . -t cognix/chunker:latest

# run container
docker run --name embedder cognix/embedder:latest
docker run --name chunker cognix/chunker:latest

#log inside a container
docker exec -it CONTAINER_NAME sh

df

# interactive shell
docker run -it --entrypoint /bin/sh cognix/embedder:latest

# cleans a lot of space
docker system prune

# resources (cpu/ram) usage by container 
docker stats
docker stats {conteiner name}

from cognix-services
sudo docker-compose -f deployment/docker-compose-services-ai.yaml down
sudo docker-compose -f deployment/docker-compose-services-ai.yaml up


es, it is possible to create symbolic links (symlinks) in your file system, and Visual Studio Code (VS Code) will treat them as regular files. This allows you to reference files located in different directories without moving the actual files.

Here's how you can create a symlink for a file or directory:


Visual Studio Code terminal shows multiple Conda envs
execute conda config --set auto_activate_base False or 
turn off "Activate Python Environment in all Terminals created" setting in the Python extension configuration in VSCode.

To generate python objects out of proto files
Attention this is the right command I got severe troubles 
python -m grpc_tools.protoc -I .  --python_out=. --pyi_out=. --grpc_python_out=. protos/embed_service.proto

python3 -m grpc_tools.protoc -I .  --python_out=. --pyi_out=. --grpc_python_out=. embedd_service.proto




You can solve the problem by set up "protoc" options.

Go into settings > Extensions > vscode-proto3 configuration and then click Edit in settings.json. (you can just edit .vscode/settings.json too.)

"protoc": {
"path": "/usr/local/bin/protoc",
"options": [
"--proto_path=${workspaceRoot}/common/proto",
]
}

python3 -m chunker.chunker_service


pod configuration

apiVersion: v1
kind: Pod
metadata:
  name: sentence-transformer
spec:
  containers:
  - name: sentence-transformer
    image: your-docker-image
    resources:
      requests:
        memory: "4Gi"  # Start with 4GiB for a medium-sized model
        cpu: "2000m"   # 2 vCPUs
      limits:
        memory: "8Gi"  # Allow up to 8GiB for peak usage
        cpu: "4000m"   # Allow up to 4 vCPUs


 | [2024/05/30 22:47:08.714 +00:00] [DEBUG] [client/client.go:109] ["RootCoordClient GetSessions success"] [address=172.20.0.7:53100] [serverID=39]
milvus-standalone  | [2024/05/30 22:47:08.919 +00:00] [WARN] [client/client.go:133] ["ClientBase ReCall grpc first
 call get error "] [role=rootcoord] [address=] [error="err: failed to connect 172.20.0.7:53100, reason: context deadline exceeded\n, /go/src/github.com/milvus-io/milvus/pkg/tracer/stack_trace.go:51 github.com/milvus-io/milvus/pkg/tracer.StackTrace\n/go/src/github.com/milvus-io/milvus/internal/util/grpcclient/client.go:378 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n/go/src/github.com/milvus-io/milvus/internal/distributed/rootcoord/client/client.go:133 github.com/milvus-io/milvus/internal/distributed/rootcoord/client.wrapGrpcCall[...]\n/go/src/github.com/milvus-io/milvus/internal/distributed/rootcoord/client/client.go:209 github.com/milvus-io/milvus/internal/distributed/rootcoord/client.(*Client).DescribeCollection\n/go/src/github.com/milvus-io/milvus/internal/datacoord/coordinator_broker.go:134 github.com/milvus-io/milvus/internal/datacoord.(*CoordinatorBroker).HasCollection\n/go/src/github.com/milvus-io/milvus/internal/datacoord/handler.go:372 github.com/milvus-io/milvus/internal/datacoord.(*ServerHandler).HasCollection.func1\n/go/src/github.com/milvus-io/milvus/pkg/util/retry/retry.go:40 github.com/milvus-io/milvus/pkg/util/retry.Do\n/go/src/github.com/milvus-io/milvus/internal/datacoord/handler.go:371 github.com/milvus-io/milvus/internal/datacoord.(*ServerHandler).HasCollection\n/go/src/github.com/milvus-io/milvus/internal/datacoord/handler.go:407 github.com/milvus-io/milvus/internal/datacoord.(*ServerHandler).CheckShouldDropChannel\n/go/src/github.com/milvus-io/milvus/internal/datacoord/channel_manager.go:254 github.com/milvus-io/milvus/internal/datacoord.(*ChannelManager).unwatchDroppedChannels\n"]
milvus-standalone  | [2024/05/30 22:47:08.922 +00:00] [DEBUG] [sessionutil/session_util.go:559] ["SessionUtil GetSessions "] [prefix=rootcoord] [key=rootcoord] [address=172.20.0.7:53100]
milvus-standalone  | [2024/05/30 22:47:08.922 +00:00] [DEBUG] [client/client.go:109] ["RootCoordClient GetSessions success"] [address=172.20.0.7:53100] [serverID=39]
milvus-standalone  | [2024/05/30 22:47:09.123 +00:00] [WARN] [client/client.go:133] ["ClientBase ReCall grpc second call get error"] [role=rootcoord] [address=] [error="err: failed to connect 172.20.0.7:53100, reason: context deadline exceeded\n, /go/src/github.com/milvus-io/milvus/pkg/tracer/stack_trace.go:51 github.com/milvus-io/milvus/pkg/tracer.StackTrace\n/go/src/github.com/milvus-io/milvus/internal/util/grpcclient/client.go:387 github.com/milvus-io/milvus/internal/util/grpcclient.(*ClientBase[...]).ReCall\n/go/src/github.com/milvus-io/milvus/internal/distributed/rootcoord/client/client.go:133 github.com/milvus-io/milvus/internal/distributed/rootcoord/client.wrapGrpcCall[...]\n/go/src/github.com/milvus-io/milvus/internal/distributed/rootcoord/client/client.go:209 github.com/milvus-io/milvus/internal/distributed/rootcoord/client.(*Client).DescribeCollection\n/go/src/github.com/milvus-io/milvus/internal/datacoord/coordinator_broker.go:134 github.com/milvus-io/milvus/internal/datacoord.(*CoordinatorBroker).HasCollection\n/go/src/github.com/milvus-io/milvus/internal/datacoord/handler.go:372 github.com/milvus-io/milvus/internal/datacoord.(*ServerHandler).HasCollection.func1\n/go/src/github.com/milvus-io/milvus/pkg/util/retry/retry.go:40 github.com/milvus-io/milvus/pkg/util/retry.Do\n/go/src/gi
