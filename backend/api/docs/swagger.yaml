basePath: /api
definitions:
  model.ChatMessage:
    properties:
      chat_session_id:
        type: number
      citations:
        items:
          type: integer
        type: array
      error:
        type: string
      feedback:
        $ref: '#/definitions/model.ChatMessageFeedback'
      id:
        type: number
      latest_child_message:
        type: integer
      message:
        type: string
      message_type:
        type: string
      parent_message:
        type: number
      rephrased_query:
        type: string
      time_sent:
        type: string
      token_count:
        type: integer
    type: object
  model.ChatMessageFeedback:
    properties:
      chat_message_id:
        type: number
      feedback:
        type: string
      id:
        type: number
      up_votes:
        type: boolean
      user_id:
        type: string
    type: object
  model.ChatSession:
    properties:
      created_date:
        type: string
      deleted_date:
        $ref: '#/definitions/pg.NullTime'
      description:
        type: string
      id:
        type: number
      messages:
        items:
          $ref: '#/definitions/model.ChatMessage'
        type: array
      one_shot:
        type: boolean
      persona:
        $ref: '#/definitions/model.Persona'
      persona_id:
        type: number
      user_id:
        type: string
    type: object
  model.Connector:
    properties:
      connector_specific_config:
        $ref: '#/definitions/model.JSONMap'
      created_date:
        type: string
      credential_id:
        type: number
      deleted_date:
        $ref: '#/definitions/pg.NullTime'
      disabled:
        type: boolean
      id:
        type: number
      input_type:
        type: string
      last_attempt_status:
        type: string
      last_successful_index_time:
        $ref: '#/definitions/pg.NullTime'
      name:
        type: string
      refresh_freq:
        type: integer
      shared:
        type: boolean
      source:
        $ref: '#/definitions/model.SourceType'
      tenant_id:
        type: string
      total_docs_indexed:
        type: integer
      updated_date:
        $ref: '#/definitions/pg.NullTime'
      user_id:
        type: string
    type: object
  model.Credential:
    properties:
      created_date:
        type: string
      credential_json:
        $ref: '#/definitions/model.JSONMap'
      deleted_date:
        $ref: '#/definitions/pg.NullTime'
      id:
        type: number
      shared:
        type: boolean
      source:
        $ref: '#/definitions/model.SourceType'
      tenant_id:
        type: string
      updated_date:
        $ref: '#/definitions/pg.NullTime'
      user_id:
        type: string
    type: object
  model.DocumentSet:
    properties:
      created_date:
        type: string
      deleted_date:
        $ref: '#/definitions/pg.NullTime'
      description:
        type: string
      id:
        type: number
      is_up_to_date:
        type: boolean
      name:
        type: string
      pairs:
        items:
          $ref: '#/definitions/model.DocumentSetConnectorPair'
        type: array
      updated_date:
        $ref: '#/definitions/pg.NullTime'
      user_id:
        type: string
    type: object
  model.DocumentSetConnectorPair:
    properties:
      connector_id:
        type: number
      document_set_id:
        type: number
      is_current:
        type: boolean
    type: object
  model.EmbeddingModel:
    properties:
      created_date:
        type: string
      deleted_date:
        $ref: '#/definitions/pg.NullTime'
      id:
        type: number
      index_name:
        type: string
      is_active:
        type: boolean
      model_dim:
        type: integer
      model_id:
        type: string
      model_name:
        type: string
      normalize:
        type: boolean
      passage_prefix:
        type: string
      query_prefix:
        type: string
      tenant_id:
        type: string
      updated_date:
        $ref: '#/definitions/pg.NullTime'
      url:
        type: string
    type: object
  model.JSONMap:
    additionalProperties: true
    type: object
  model.LLM:
    properties:
      created_date:
        type: string
      deleted_date:
        $ref: '#/definitions/pg.NullTime'
      endpoint:
        type: string
      id:
        type: number
      model_id:
        type: string
      name:
        type: string
      tenant_id:
        type: string
      updated_date:
        $ref: '#/definitions/pg.NullTime'
      url:
        type: string
    type: object
  model.Persona:
    properties:
      created_date:
        type: string
      default_persona:
        type: boolean
      deleted_date:
        $ref: '#/definitions/pg.NullTime'
      description:
        type: string
      display_priority:
        type: integer
      id:
        type: number
      is_visible:
        type: boolean
      llm:
        $ref: '#/definitions/model.LLM'
      llm_id:
        type: number
      name:
        type: string
      prompt:
        $ref: '#/definitions/model.Prompt'
      starter_messages:
        items:
          type: integer
        type: array
      tenant_id:
        type: string
      updated_date:
        $ref: '#/definitions/pg.NullTime'
    type: object
  model.Prompt:
    properties:
      created_date:
        type: string
      datetime_aware:
        type: boolean
      default_prompt:
        type: boolean
      deleted_date:
        $ref: '#/definitions/pg.NullTime'
      description:
        type: string
      id:
        type: number
      include_citations:
        type: boolean
      name:
        type: string
      persona_id:
        type: number
      system_prompt:
        type: string
      task_prompt:
        type: string
      updated_date:
        $ref: '#/definitions/pg.NullTime'
      user_id:
        type: string
    type: object
  model.SourceType:
    enum:
    - ingestion_api
    - slack
    - web
    - google_drive
    - gmail
    - requesttracker
    - github
    - gitlab
    - guru
    - bookstack
    - confluence
    - slab
    - jira
    - productboard
    - file
    - notion
    - zulip
    - linear
    - hubspot
    - document360
    - gong
    - google_sites
    - zendesk
    - loopio
    - sharepoint
    type: string
    x-enum-varnames:
    - SourceTypeIngestionApi
    - SourceTypeSlack
    - SourceTypeWEB
    - SourceTypeGoogleDrive
    - SourceTypeGMAIL
    - SourceTypeRequesttracker
    - SourceTypeGithub
    - SourceTypeGitlab
    - SourceTypeGuru
    - SourceTypeBookstack
    - SourceTypeConfluence
    - SourceTypeSlab
    - SourceTypeJira
    - SourceTypeProductboard
    - SourceTypeFile
    - SourceTypeNotion
    - SourceTypeZulip
    - SourceTypeLinear
    - SourceTypeHubspot
    - SourceTypeDocument360
    - SourceTypeGong
    - SourceTypeGoogleSites
    - SourceTypeZendesk
    - SourceTypeLoopio
    - SourceTypeSharepoint
  model.Tenant:
    properties:
      configuration:
        $ref: '#/definitions/model.JSONMap'
      id:
        type: string
      name:
        type: string
    type: object
  model.User:
    properties:
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      roles:
        items:
          type: string
        type: array
      tenant:
        $ref: '#/definitions/model.Tenant'
      tenant_id:
        type: string
      user_name:
        type: string
    type: object
  parameters.AddUserParam:
    properties:
      email:
        type: string
      role:
        type: string
    type: object
  parameters.BaseFilters:
    properties:
      document_set:
        items:
          type: string
        type: array
      source_type:
        items:
          $ref: '#/definitions/model.SourceType'
        type: array
      tags:
        items:
          type: string
        type: array
      time_cutoff:
        type: string
    type: object
  parameters.CreateChatMessageRequest:
    properties:
      chat_session_id:
        type: number
      message:
        type: string
      no_ai_answer:
        type: boolean
      parent_message_id:
        type: number
      prompt_id:
        type: number
      query_override:
        type: string
      retrieval_options:
        $ref: '#/definitions/parameters.RetrievalDetails'
      search_doc_ids:
        items:
          type: number
        type: array
    type: object
  parameters.CreateChatSession:
    properties:
      description:
        type: string
      one_shot:
        type: boolean
      persona_id:
        type: number
    type: object
  parameters.CreateConnectorParam:
    properties:
      connector_specific_config:
        $ref: '#/definitions/model.JSONMap'
      credential_id:
        type: number
      disabled:
        type: boolean
      input_type:
        type: string
      name:
        type: string
      refresh_freq:
        type: integer
      shared:
        type: boolean
      source:
        type: string
    type: object
  parameters.CreateCredentialParam:
    properties:
      credential_json:
        $ref: '#/definitions/model.JSONMap'
      shared:
        type: boolean
      source:
        type: string
    type: object
  parameters.DocumentSetParam:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  parameters.EditUserParam:
    properties:
      role:
        type: string
    type: object
  parameters.EmbeddingModelParam:
    properties:
      index_name:
        type: string
      is_active:
        type: boolean
      model_dim:
        type: integer
      model_id:
        type: string
      model_name:
        type: string
      normalize:
        type: boolean
      passage_prefix:
        type: string
      query_prefix:
        type: string
      url:
        type: string
    type: object
  parameters.MessageFeedbackParam:
    properties:
      id:
        type: number
      vote:
        type: string
    type: object
  parameters.PersonaParam:
    properties:
      api_key:
        type: string
      description:
        type: string
      endpoint:
        type: string
      model_id:
        type: string
      name:
        type: string
      starter_messages:
        items:
          $ref: '#/definitions/parameters.StarterMessage'
        type: array
      system_prompt:
        type: string
      task_prompt:
        type: string
      url:
        type: string
    type: object
  parameters.RetrievalDetails:
    properties:
      enable_auto_detect_filters:
        type: boolean
      filters:
        $ref: '#/definitions/parameters.BaseFilters'
      limit:
        type: integer
      offset:
        type: integer
      real_time:
        type: boolean
      run_search:
        type: string
    type: object
  parameters.StarterMessage:
    properties:
      description:
        type: string
      message:
        type: string
      name:
        type: string
    type: object
  parameters.UpdateConnectorParam:
    properties:
      connector_specific_config:
        $ref: '#/definitions/model.JSONMap'
      credential_id:
        type: number
      disabled:
        type: boolean
      input_type:
        type: string
      name:
        type: string
      refresh_freq:
        type: integer
      shared:
        type: boolean
    type: object
  parameters.UpdateCredentialParam:
    properties:
      credential_json:
        $ref: '#/definitions/model.JSONMap'
      shared:
        type: boolean
    type: object
  pg.NullTime:
    properties:
      time.Time:
        type: string
    type: object
info:
  contact:
    name: API Support
  description: This is Cognix Golang API Documentation
  title: Cognix API
  version: "1.0"
paths:
  /auth/google/login:
    get:
      description: login using google auth
      operationId: auth_login
      parameters:
      - description: redirect base url
        in: query
        name: redirect_url
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: login using google auth
      tags:
      - Auth
  /chats/create-chat-session:
    post:
      description: creates new chat session
      operationId: chat_create_session
      parameters:
      - description: create session parameters
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/parameters.CreateChatSession'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ChatSession'
      security:
      - ApiKeyAuth: []
      summary: creates new chat session
      tags:
      - Chat
  /chats/get-chat-session/{id}:
    get:
      description: return chat session with messages by given id
      operationId: chat_get_by_id
      parameters:
      - description: session id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ChatSession'
      security:
      - ApiKeyAuth: []
      summary: return chat session with messages by given id
      tags:
      - Chat
  /chats/get-user-chat-sessions:
    get:
      description: return list of chat sessions for current user
      operationId: chat_get_sessions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.ChatSession'
            type: array
      security:
      - ApiKeyAuth: []
      summary: return list of chat sessions for current user
      tags:
      - Chat
  /chats/message/feedback:
    post:
      description: add  feedback to message
      operationId: chat_message_feedback
      parameters:
      - description: send message parameters
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/parameters.MessageFeedbackParam'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ChatMessageFeedback'
      security:
      - ApiKeyAuth: []
      summary: add  feedback to message
      tags:
      - Chat
  /chats/send-message:
    post:
      description: send message and wait stream response
      operationId: chat_send_message
      parameters:
      - description: send message parameters
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/parameters.CreateChatMessageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ChatMessage'
      security:
      - ApiKeyAuth: []
      summary: send message and wait stream response
      tags:
      - Chat
  /manage/connector:
    get:
      description: return list of allowed connectors
      operationId: connectors_get_all
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Connector'
            type: array
      security:
      - ApiKeyAuth: []
      summary: return list of allowed connectors
      tags:
      - Connectors
  /manage/connector/:
    post:
      description: creates connector
      operationId: connectors_create
      parameters:
      - description: connector create parameter
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/parameters.CreateConnectorParam'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Connector'
      security:
      - ApiKeyAuth: []
      summary: creates connector
      tags:
      - Connectors
  /manage/connector/{id}:
    get:
      description: return list of allowed connectors
      operationId: connectors_get_by_id
      parameters:
      - description: connector id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Connector'
      security:
      - ApiKeyAuth: []
      summary: return list of allowed connectors
      tags:
      - Connectors
    put:
      description: updates connector
      operationId: connectors_update
      parameters:
      - description: connector id
        in: path
        name: id
        required: true
        type: integer
      - description: connector update parameter
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/parameters.UpdateConnectorParam'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Connector'
      security:
      - ApiKeyAuth: []
      summary: updates connector
      tags:
      - Connectors
  /manage/credential:
    get:
      description: return list of allowed credentials
      operationId: credentials_get_all
      parameters:
      - description: source of credentials
        in: query
        name: source
        type: string
      - description: true for include deleted credentials
        in: query
        name: archived
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Credential'
            type: array
      security:
      - ApiKeyAuth: []
      summary: return list of allowed credentials
      tags:
      - Credentials
    post:
      description: creates new credential
      operationId: credentials_create
      parameters:
      - description: credential create parameter
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/parameters.CreateCredentialParam'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Credential'
      security:
      - ApiKeyAuth: []
      summary: creates new credential
      tags:
      - Credentials
  /manage/credential/{id}:
    get:
      description: return list of allowed credentials
      operationId: credentials_get_by_id
      parameters:
      - description: credential id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Credential'
      security:
      - ApiKeyAuth: []
      summary: return list of allowed credentials
      tags:
      - Credentials
    put:
      description: updates credential
      operationId: credentials_update
      parameters:
      - description: credential id
        in: path
        name: id
        required: true
        type: integer
      - description: credential update parameter
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/parameters.UpdateCredentialParam'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Credential'
      security:
      - ApiKeyAuth: []
      summary: updates credential
      tags:
      - Credentials
  /manage/document_sets:
    get:
      description: return list of document sets for current user
      operationId: document_set_get_by_user
      parameters:
      - description: true for include deleted document sets
        in: query
        name: archived
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.DocumentSet'
            type: array
      security:
      - ApiKeyAuth: []
      summary: return list of document sets for current user
      tags:
      - Document Set
    post:
      description: creates document sets
      operationId: document_set_create
      parameters:
      - description: document set parameter
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/parameters.DocumentSetParam'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.DocumentSet'
      security:
      - ApiKeyAuth: []
      summary: creates document sets
      tags:
      - Document Set
  /manage/document_sets/{id}:
    get:
      description: return document set with connector list by id
      operationId: document_set_get_by_id
      parameters:
      - description: document set id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.DocumentSet'
      security:
      - ApiKeyAuth: []
      summary: return document set with connector list by id
      tags:
      - Document Set
    put:
      description: updates document sets
      operationId: document_set_update
      parameters:
      - description: document set id
        in: path
        name: id
        required: true
        type: integer
      - description: document set parameter
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/parameters.DocumentSetParam'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.DocumentSet'
      security:
      - ApiKeyAuth: []
      summary: updates document sets
      tags:
      - Document Set
  /manage/document_sets/{id}/{action}:
    post:
      description: delete or restore document sets
      operationId: document_set_delete
      parameters:
      - description: document set id
        in: path
        name: id
        required: true
        type: integer
      - description: 'action : delete | restore '
        in: path
        name: action
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.DocumentSet'
      security:
      - ApiKeyAuth: []
      summary: delete or restore document sets
      tags:
      - Document Set
  /manage/embedding_models:
    get:
      description: return list of embedding models
      operationId: embedding_model_get_all
      parameters:
      - description: true for include deleted embedding models
        in: query
        name: archived
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.EmbeddingModel'
            type: array
      security:
      - ApiKeyAuth: []
      summary: return list of embedding models
      tags:
      - EmbeddingModel
    post:
      description: creates embedding models
      operationId: embedding_model_create
      parameters:
      - description: embedding model parameter
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/parameters.EmbeddingModelParam'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.EmbeddingModel'
      security:
      - ApiKeyAuth: []
      summary: creates embedding models
      tags:
      - EmbeddingModel
  /manage/embedding_models/{id}:
    get:
      description: return embedding model by id
      operationId: embedding_model_get_by_id
      parameters:
      - description: embedding model id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.EmbeddingModel'
      security:
      - ApiKeyAuth: []
      summary: return embedding model by id
      tags:
      - EmbeddingModel
    put:
      description: updates embedding model
      operationId: embedding_model_update
      parameters:
      - description: embedding model id
        in: path
        name: id
        required: true
        type: integer
      - description: embedding model parameter
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/parameters.EmbeddingModelParam'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.EmbeddingModel'
      security:
      - ApiKeyAuth: []
      summary: updates embedding model
      tags:
      - EmbeddingModel
  /manage/embedding_models/{id}/{action}:
    post:
      description: delete or restore embedding model
      operationId: embedding_model_delete
      parameters:
      - description: embedding model id
        in: path
        name: id
        required: true
        type: integer
      - description: 'action : delete | restore '
        in: path
        name: action
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.EmbeddingModel'
      security:
      - ApiKeyAuth: []
      summary: delete or restore embedding model
      tags:
      - EmbeddingModel
  /manage/personas:
    get:
      description: return list of allowed personas
      operationId: personas_get_all
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Persona'
            type: array
      security:
      - ApiKeyAuth: []
      summary: return list of allowed personas
      tags:
      - Persona
    post:
      description: create persona
      operationId: persona_create
      parameters:
      - description: persona payload
        in: body
        name: id
        required: true
        schema:
          $ref: '#/definitions/parameters.PersonaParam'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Persona'
      security:
      - ApiKeyAuth: []
      summary: create persona
      tags:
      - Persona
  /manage/personas/{id}:
    get:
      description: return persona by id
      operationId: persona_get_by_id
      parameters:
      - description: persona id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Persona'
      security:
      - ApiKeyAuth: []
      summary: return persona by id
      tags:
      - Persona
    put:
      description: update persona
      operationId: persona_update
      parameters:
      - description: persona id
        in: path
        name: id
        required: true
        type: integer
      - description: persona payload
        in: body
        name: id
        required: true
        schema:
          $ref: '#/definitions/parameters.PersonaParam'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Persona'
      security:
      - ApiKeyAuth: []
      summary: update persona
      tags:
      - Persona
  /tenant/user_info:
    get:
      description: get user info
      operationId: tenant_get_user_info
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
      security:
      - ApiKeyAuth: []
      summary: get user info
      tags:
      - Tenant
  /tenant/users:
    get:
      description: return list of users
      operationId: tenant_get_users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
      security:
      - ApiKeyAuth: []
      summary: return list of users
      tags:
      - Tenant
    post:
      description: add new user
      operationId: tenant_add_user
      parameters:
      - description: create user parameter
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/parameters.AddUserParam'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
      security:
      - ApiKeyAuth: []
      summary: add new user
      tags:
      - Tenant
  /tenant/users/{id}:
    put:
      description: edit  user
      operationId: tenant_edit_user
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      - description: edit user parameter
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/parameters.EditUserParam'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
      security:
      - ApiKeyAuth: []
      summary: edit user
      tags:
      - Tenant
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
