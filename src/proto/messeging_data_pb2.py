# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: messeging_data.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import connector_messages_pb2 as connector__messages__pb2
import chunking_data_pb2 as chunking__data__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x14messeging_data.proto\x12\ncom.embedd\x1a\x18\x63onnector_messages.proto\x1a\x13\x63hunking_data.proto\"\x89\x01\n\x07Message\x12/\n\x06header\x18\x01 \x03(\x0b\x32\x1f.com.embedd.Message.HeaderEntry\x12\x1e\n\x04\x62ody\x18\x02 \x01(\x0b\x32\x10.com.embedd.Body\x1a-\n\x0bHeaderEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"p\n\x04\x42ody\x12/\n\x07trigger\x18\x01 \x01(\x0b\x32\x1c.com.embedd.ConnectorRequestH\x00\x12,\n\x08\x63hunking\x18\x02 \x01(\x0b\x32\x18.com.embedd.ChunkingDataH\x00\x42\t\n\x07payloadB\x1aZ\x18\x62\x61\x63kend/core/proto;protob\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'messeging_data_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'Z\030backend/core/proto;proto'
  _globals['_MESSAGE_HEADERENTRY']._loaded_options = None
  _globals['_MESSAGE_HEADERENTRY']._serialized_options = b'8\001'
  _globals['_MESSAGE']._serialized_start=84
  _globals['_MESSAGE']._serialized_end=221
  _globals['_MESSAGE_HEADERENTRY']._serialized_start=176
  _globals['_MESSAGE_HEADERENTRY']._serialized_end=221
  _globals['_BODY']._serialized_start=223
  _globals['_BODY']._serialized_end=335
# @@protoc_insertion_point(module_scope)
