// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: chunking_data.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileType int32

const (
	FileType_URL FileType = 0
	FileType_PDF FileType = 1
	FileType_RTF FileType = 2
	FileType_DOC FileType = 3
	FileType_XLS FileType = 4
	FileType_PPT FileType = 5
	FileType_TXT FileType = 6
	FileType_MD  FileType = 7
)

// Enum value maps for FileType.
var (
	FileType_name = map[int32]string{
		0: "URL",
		1: "PDF",
		2: "RTF",
		3: "DOC",
		4: "XLS",
		5: "PPT",
		6: "TXT",
		7: "MD",
	}
	FileType_value = map[string]int32{
		"URL": 0,
		"PDF": 1,
		"RTF": 2,
		"DOC": 3,
		"XLS": 4,
		"PPT": 5,
		"TXT": 6,
		"MD":  7,
	}
)

func (x FileType) Enum() *FileType {
	p := new(FileType)
	*p = x
	return p
}

func (x FileType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileType) Descriptor() protoreflect.EnumDescriptor {
	return file_chunking_data_proto_enumTypes[0].Descriptor()
}

func (FileType) Type() protoreflect.EnumType {
	return &file_chunking_data_proto_enumTypes[0]
}

func (x FileType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileType.Descriptor instead.
func (FileType) EnumDescriptor() ([]byte, []int) {
	return file_chunking_data_proto_rawDescGZIP(), []int{0}
}

type ChunkingData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This is url where the file is located.
	// Based on the chunking type it will be a WEB URL (HTML type)
	// Will be an S3/MINIO link with a proper authentication in case of a file
	Url        string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	DocumentId int64    `protobuf:"varint,2,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	FileType   FileType `protobuf:"varint,3,opt,name=file_type,json=fileType,proto3,enum=com.embedd.FileType" json:"file_type,omitempty"`
}

func (x *ChunkingData) Reset() {
	*x = ChunkingData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chunking_data_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChunkingData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkingData) ProtoMessage() {}

func (x *ChunkingData) ProtoReflect() protoreflect.Message {
	mi := &file_chunking_data_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkingData.ProtoReflect.Descriptor instead.
func (*ChunkingData) Descriptor() ([]byte, []int) {
	return file_chunking_data_proto_rawDescGZIP(), []int{0}
}

func (x *ChunkingData) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ChunkingData) GetDocumentId() int64 {
	if x != nil {
		return x.DocumentId
	}
	return 0
}

func (x *ChunkingData) GetFileType() FileType {
	if x != nil {
		return x.FileType
	}
	return FileType_URL
}

var File_chunking_data_proto protoreflect.FileDescriptor

var file_chunking_data_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6d, 0x62, 0x65, 0x64,
	0x64, 0x22, 0x74, 0x0a, 0x0c, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6d,
	0x62, 0x65, 0x64, 0x64, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2a, 0x51, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03,
	0x50, 0x44, 0x46, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x54, 0x46, 0x10, 0x02, 0x12, 0x07,
	0x0a, 0x03, 0x44, 0x4f, 0x43, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x58, 0x4c, 0x53, 0x10, 0x04,
	0x12, 0x07, 0x0a, 0x03, 0x50, 0x50, 0x54, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x58, 0x54,
	0x10, 0x06, 0x12, 0x06, 0x0a, 0x02, 0x4d, 0x44, 0x10, 0x07, 0x42, 0x1a, 0x5a, 0x18, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chunking_data_proto_rawDescOnce sync.Once
	file_chunking_data_proto_rawDescData = file_chunking_data_proto_rawDesc
)

func file_chunking_data_proto_rawDescGZIP() []byte {
	file_chunking_data_proto_rawDescOnce.Do(func() {
		file_chunking_data_proto_rawDescData = protoimpl.X.CompressGZIP(file_chunking_data_proto_rawDescData)
	})
	return file_chunking_data_proto_rawDescData
}

var file_chunking_data_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_chunking_data_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_chunking_data_proto_goTypes = []interface{}{
	(FileType)(0),        // 0: com.embedd.FileType
	(*ChunkingData)(nil), // 1: com.embedd.ChunkingData
}
var file_chunking_data_proto_depIdxs = []int32{
	0, // 0: com.embedd.ChunkingData.file_type:type_name -> com.embedd.FileType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_chunking_data_proto_init() }
func file_chunking_data_proto_init() {
	if File_chunking_data_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chunking_data_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChunkingData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chunking_data_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chunking_data_proto_goTypes,
		DependencyIndexes: file_chunking_data_proto_depIdxs,
		EnumInfos:         file_chunking_data_proto_enumTypes,
		MessageInfos:      file_chunking_data_proto_msgTypes,
	}.Build()
	File_chunking_data_proto = out.File
	file_chunking_data_proto_rawDesc = nil
	file_chunking_data_proto_goTypes = nil
	file_chunking_data_proto_depIdxs = nil
}
